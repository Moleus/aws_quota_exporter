name: docker

on:
  push:
    branches: ["main"]
    tags: ["*"]

env:
  REGISTRY_DOCKERHUB_ENABLED: secrets.DOCKERHUB_USERNAME != null
  REGISTRY_GITHUB_ENABLED: secrets.REGISTRY_GITHUB != null
  IMAGE_NAME: ugwuanyi/aqe
  TEST_IMAGE: aqe/test

jobs:
  prebuild:
    name: prebuild
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - uses: actions/checkout@v3

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  buildDockerImage:
    name: Build docker image
    needs: [prebuild]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up docker testing tool
        run: curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Login to DockerHub Registry
        if: env.REGISTRY_DOCKERHUB_ENABLED
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Github Container Registry
        if: env.REGISTRY_GITHUB_ENABLED
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Test image
        run: docker build -t ${{ env.TEST_IMAGE }} -f docker/Dockerfile .

      - name: Run Image tests
        run: container-structure-test test --config docker/tests.yaml --image ${{ env.TEST_IMAGE }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "docker/Dockerfile"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            "${{ env.IMAGE_NAME }}:latest"
            "${{ env.IMAGE_NAME }}:${{ needs.prebuild.outputs.new_tag }}"

      - name: Build and push tags
        if: env.REGISTRY_GITHUB_ENABLED
        run: |
          docker buildx imagetools create \
            --tag "${{ secrets.REGISTRY_GITHUB }}/APP_NAME:latest" \
            --tag "${{ secrets.REGISTRY_GITHUB }}/${{ env.APP_NAME }}:${{ needs.prebuild.outputs.new_tag }}"
            "${{ env.IMAGE_NAME }}:latest"

